// ====================================================================
// Description: Thinning algorithm as defined in the text,
//				Digital Image processing by Gonzales & Woods, 1993.
//				Pages (492-493), 8.1.5 Skeleton of a Region.
//
// ====================================================================
<languageVersion : 1.0;>

kernel BorderDelete
<   namespace :   "BorderDelete";
    vendor :      "";
    version :     1;
    description : "delete pixels deemed border";
>
{        
    parameter int stepOp
    <
        minValue: 1;
        maxValue: 2;
        defaultValue: 2;
    >;
    
    input image4 src;   // original image
    output pixel4 dst;
    
    void
    evaluatePixel()
    {
        // black transparent pixel (off) default
        dst.a = 0.0;
        dst.r = 0.0; 
        dst.g = 0.0;
        dst.b = 0.0;
                    
        // get p2 - p9 pixels
        float2 pos = outCoord();
        float4 p = sampleNearest(src, pos);
        
        if(p.b!=0.0&&p.g!=0.0) {
            pos.y = pos.y-1.0;
            float4 p2 = sampleNearest(src, pos);
            
            pos.x = pos.x-1.0;
            float4 p9 = sampleNearest(src, pos);
            
            pos.x = pos.x+2.0;
            float4 p3 = sampleNearest(src, pos);
            
            pos.y = pos.y+1.0;
            float4 p4 = sampleNearest(src, pos);
            
            pos.x = pos.x-2.0;
            float4 p8 = sampleNearest(src, pos);
            
            pos.y = pos.y+1.0;
            float4 p7 = sampleNearest(src, pos);
            
            pos.x = pos.x+1.0;
            float4 p6 = sampleNearest(src, pos);
            
            pos.x = pos.x+1.0;
            float4 p5 = sampleNearest(src, pos);
            
            // pg 492 criterior (a)
            int n=0;
            
            int b2 = (p2.b==1.0)?1:0; 
            int b3 = (p3.b==1.0)?1:0;
            int b4 = (p4.b==1.0)?1:0;
            int b5 = (p5.b==1.0)?1:0;
            int b6 = (p6.b==1.0)?1:0;
            int b7 = (p7.b==1.0)?1:0;
            int b8 = (p8.b==1.0)?1:0;
            int b9 = (p9.b==1.0)?1:0;
            
            
            if(b2==1) n+=1;
            if(b3==1) n+=1;
            if(b4==1) n+=1;
            if(b5==1) n+=1;
            if(b6==1) n+=1;
            if(b7==1) n+=1;
            if(b8==1) n+=1;
            if(b9==1) n+=1;
            
            // 2<= N(p1) <= 6
            if(2<=n&&n<=6) {
                // pg 492 criterior (b)
                int s=0;
                if(b2==0&&b3==1)s+=1;
                if(b3==0&&b4==1)s+=1;
                if(b4==0&&b5==1)s+=1;
                if(b5==0&&b6==1)s+=1;
                if(b6==0&&b7==1)s+=1;
                if(b7==0&&b8==1)s+=1;
                if(b8==0&&b9==1)s+=1;
                if(b9==0&&b2==1)s+=1;
               
               // meets S(p1)==1 criterior
                if(s==1) {
                    
                    if(stepOp==1) {
                        // step 1 white pixel is on (to be deleted)
                        if(b4==0||b6==0||(b2==0&&b8==0)) {
                            dst.a = 1.0;
                            dst.r = 0.0; 
                            dst.g = 1.0;
                            dst.b = 1.0;
                        }
                    }
                    else {
                    // step 2 white pixel is on (to be deleted)
                        if(b2==0||b8==0||(b6==0&&b4==0)) {
                            dst.a = 1.0;
                            dst.r = 0.0; 
                            dst.g = 1.0;
                            dst.b = 1.0;
                        }
                    }
                }
            }
        }
    }
}
