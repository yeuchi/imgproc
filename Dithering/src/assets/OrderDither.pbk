// ==============================================================
// Module:      OrderDither 
//
// Description: Order dither Bayer pattern
//              - halftone pattern popular for screen with low color depth
//              or thermal transfer printer with contone capability.
//              - binary dither only for now.
//              - 45 degree angle only for now.
//
// NOTE:        pixelbender 2 math is screwed up.
//              use the mod with x2 and remainder values of 1, 3, 5, 7.
//
//              pixelbender 1 can use the correct values
//
// Reference:   http://en.wikipedia.org/wiki/Ordered_dithering
//
// Author(s):   Chi T. Yeung (cty)
//
// Input:       one gray scale image.
// Output:      one dithered image of binary data.
//
// History:
// 20Sep11      1st completion                              cty
// ==============================================================

<languageVersion : 1.0;>

kernel OrderDither
<   namespace :   "OrderDither";
    vendor :      "";
    version :     1;
    description : "http://en.wikipedia.org/wiki/Ordered_dithering";
>
{     
     parameter float versionNumber
    <
        minValue: 1.0;
        maxValue: 10.0;
        defaultValue: 2.0;
    >;
    
    input image4 src;
    output pixel4 dst;
    
    void
    evaluatePixel()
    {
        float2 pos = outCoord();
        float threshold=0.0;
        dst = sampleNearest(src, pos);
        int x;
        int y;
        
        /* there is a bug in pixelbender with mod
         * below is the correct method and math but does not work
         * with version 2.0.  (works with version 1).
         */
         if(versionNumber < 2.0) {
            x = int(mod(pos.x, 4.0));
            y = int(mod(pos.y, 4.0));
           
           if(y==0) {
                if(x==0) 
                    threshold = 1.0/17.0;
                else if (x==1)
                    threshold = 9.0/17.0;
                else if (x==2)
                    threshold = 3.0/17.0;
                else if (x==3)
                    threshold = 11.0/17.0;
            }
            
            else if (y==1) {
                if (x==0)
                    threshold = 13.0/17.0;
                else if (x==1)
                    threshold = 5.0/17.0;
                else if (x==2)
                    threshold = 15.0/17.0;
                else if (x==3)
                    threshold = 7.0/17.0;
            }
            
            else if (y==2) {
                if (x==0)
                    threshold = 4.0/17.0;
                else if (x==1)
                    threshold = 12.0/17.0;
                else if (x==2)
                    threshold = 2.0/17.0;
                else if (x==3)
                    threshold = 10.0/17.0;
            }
        
            else if (y==3) {
                if (x==0)
                    threshold = 16.0/17.0;
                else if (x==1)
                    threshold = 8.0/17.0;
                else if (x==2)
                    threshold = 14.0/17.0;
                else if (x==3)
                    threshold = 6.0/17.0;
            }
        }
        else {
      
            // pixelbender 2 math is screwed up but this works.
            x = int(mod(pos.x*2.0, 8.0));
            y = int(mod(pos.y*2.0, 8.0));
            
            // instead of remainder of 0, 1, 2, 3; use 1, 3, 5, 7 for version pb 2.
            if(y==1) {
                if(x==1) 
                    threshold = 1.0/17.0;
                else if (x==3)
                    threshold = 9.0/17.0;
                else if (x==5)
                    threshold = 3.0/17.0;
                else if (x==7)
                    threshold = 11.0/17.0;
            }
            
            else if (y==3) {
                if (x==1)
                    threshold = 13.0/17.0;
                else if (x==3)
                    threshold = 5.0/17.0;
                else if (x==5)
                    threshold = 15.0/17.0;
                else if (x==7)
                    threshold = 7.0/17.0;
            }
                
            else if (y==5) {
                if (x==1)
                    threshold = 4.0/17.0;
                else if (x==3)
                    threshold = 12.0/17.0;
                else if (x==5)
                    threshold = 2.0/17.0;
                else if (x==7)
                    threshold = 10.0/17.0;
            }
            
            else if (y==7) {
                if (x==1)
                    threshold = 16.0/17.0;
                else if (x==3)
                    threshold = 8.0/17.0;
                else if (x==5)
                    threshold = 14.0/17.0;
                else if (x==7)
                    threshold = 6.0/17.0;
            }
        }
        
        dst.r = (dst.r>threshold)?1.0:0.0;
        dst.g = (dst.g>threshold)?1.0:0.0;
        dst.b = (dst.b>threshold)?1.0:0.0;
    }
}
