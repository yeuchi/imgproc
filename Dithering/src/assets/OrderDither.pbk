// ==============================================================
// Module:      OrderDither 
//
// Description: Order dither Bayer pattern
//              - halftone pattern popular for screen with low color depth
//              or thermal transfer printer with contone capability.
//              - binary dither only for now.
//              - 45 degree angle only for now.
//
// Reference:   http://en.wikipedia.org/wiki/Ordered_dithering
//
// Author(s):   Chi T. Yeung (cty)
//
// Input:       one gray scale image.
// Output:      one dithered image of binary data.
//
// History:
// 20Sep11      1st completion                              cty
// ==============================================================

<languageVersion : 1.0;>

kernel OrderDither
<   namespace :   "OrderDither";
    vendor :      "";
    version :     1;
    description : "http://en.wikipedia.org/wiki/Ordered_dithering";
>
{      
    input image4 src;
    output pixel4 dst;
    
    void
    evaluatePixel()
    {
        float2 pos = outCoord();
        float threshold;
        float4 pxl = sampleNearest(src, pos) / 9.0;
        int x = int(mod(pos.x, 3.0));
        int y = int(mod(pos.y, 3.0));
        
        if(x==0&&y==0) 
            threshold = 0.3;
        else if (x==1&&y==0)
            threshold = 0.7;
        else if (x==2&&y==0)
            threshold = 0.4;
        else if (x==0&&y==1)
            threshold = 0.6;
        else if (x==1&&y==1)
            threshold = 0.1;
        else if (x==2&&y==1)
            threshold = 0.9;
        else if (x==0&&y==2)
            threshold = 0.2;
        else if (x==1&&y==2)
            threshold = 0.8;
        else //if (x==2&&y==2)
            threshold = 0.5;
        
        dst.a = pxl.a;
        dst.r = (pxl.r>threshold)?1.0:0.0;
        dst.g = (pxl.g>threshold)?1.0:0.0;
        dst.b = (pxl.b>threshold)?1.0:0.0;
    }
}
